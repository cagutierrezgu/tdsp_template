# -*- coding: utf-8 -*-
"""evaluation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rARqrU6L1FJaYx2KUNCCRJTWBl2Mf6UU
"""

import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn import model_selection
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
from data_loading import dataload;
from data_exploring import preprocess;
from training import train;

link = 'https://drive.google.com/uc?export=download&id=1oOgj9f5UTITTDzMehEIIzNz2aoR2IlgZ'
name = 'stars.csv'
df_stars = dataload(link, name)

X_train, X_test, y_train, y_test, scaler = preprocess(df_stars)

cr, depth = train(X_train, y_train)

def evaluate(x_train, y_train, x_test, y_test):
  tree = DecisionTreeClassifier(criterion = cr, max_depth = depth)
  tree.fit(X_train, y_train)
  prediction = tree.predict(x_test)

  report = classification_report(y_test, prediction)
  return report

report = evaluate(X_train, y_train, X_test, y_test)
print(report)

Nombres = {0:'Brown Dwarf',1:'Red Dwarf',2:'White Dwarf',3:'Main Sequence',4:'Supergiant',5:'Hypergiant'}
def usuario(lista):
  df = scaler.transform(lista)
  tree = DecisionTreeClassifier(criterion = cr, max_depth = depth)
  tree.fit(X_train, y_train)
  prediction = tree.predict(df)
  return Nombres[prediction[0]]

usuario(np.array([[9294,58,634,34986]]))